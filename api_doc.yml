openapi: "3.0.3"
info:
  title: Raha API仕様書
  version: "1.0"
servers:
  - url: https://localhost:8080/
paths:
  /login:
    post:
      summary: ログイン
      description: ログインする処理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: email@example.com
                password:
                  type: string
                  format: password
                  example: password
      responses:
        "200":
          description: ログイン成功
          headers:
            X-AUTH-TOKEN:
              $ref: '#/components/headers/X-AUTH-TOKEN'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "入力されたメールアドレスは既に登録されています"

  /register:
    post:
      summary: ユーザー登録
      description: ユーザー登録する処理。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ユーザー名
                  example: name
                email:
                  type: string
                  description: メールアドレス
                  example: email
                password:
                  type: string
                  description: パスワード
                  example: password
      responses:
        "201":
          description: 登録成功
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          description: メールアドレス重複エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "入力されたメールアドレスは既に登録されています"
  /users/{userId}:
    get:
      summary: ユーザー詳細
      description: ユーザー詳細画面を表示
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      responses:
        "200":
          description: 表示成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: "integer"
                    example: 1
                  name:
                    type: string
                    example: name
                  email:
                    type: string
                    example: test@example.com
                  password:
                    type: string
                    example: null
                  introduction:
                    type: string
                    example: self introduction
                  created_at:
                    type: string
                    example: "1900-01-01"
                  updated_at:
                    type: string
                    example: "1900-01-01"
        "400":
          $ref: '#/components/responses/BadRequest'
    put:
      summary: ユーザー情報更新
      description: ユーザー情報を更新
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
                email:
                  type: string
                  example: test@example.com
                introduction:
                  type: string
                  example: self introduction
      responses:
        "204":
          description: 更新成功
        "400":
          $ref: '#/components/responses/BadRequest'
    delete:
      summary: ユーザー削除
      description: ユーザー情報を削除
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      responses:
        "204":
          description: 削除成功
        "400":
          $ref: '#/components/responses/BadRequest'
  /users/{userId}/articles:
    get:
      summary: ユーザー投稿一覧
      description: ユーザー投稿一覧を表示
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      responses:
        "200":
          description: 表示成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    articleId:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "title"
                    content:
                      type: string
                      example: "content"
                    user:
                      type: object
                      example: null
                    commentList:
                      type: array
                      example: null
                    created_at:
                      type: string
                      example: "1900-01-01"
                    updated_at:
                      type: string
                      example: "1900-01-01"
  /articles:
    get:
      summary: 投稿一覧
      description: 投稿一覧画面を表示
      responses:
        "200":
          description: 表示成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    articleId:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "title"
                    content:
                      type: string
                      example: "content"
                    user:
                      type: object
                      properties:
                        userId:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "user"
                        email:
                          type: string
                          nullable: true
                          example: null
                        password:
                          type: string
                          nullable: true
                          example: null
                        introduction:
                          type: string
                          nullable: true
                          example: null
                        created_at:
                          type: string
                          format: date-time
                          nullable: true
                          example: null
                        updated_at:
                          type: string
                          format: date-time
                          nullable: true
                          example: null
                    commentList:
                      type: array
                      nullable: true
                      example: null
                    created_at:
                      type: string
                      format: date-time
                      example: "1900-01-01T00:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "1900-01-01T00:00:00Z"
    post:
      summary: 新規投稿
      description: 新規投稿を登録
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                content:
                  type: string
                  example: content
                userId:
                  type: integer
                  example: 1
      responses:
        "201":
          description: 登録成功
          headers:
            LOCATION:
              description: URI
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  articleId:
                    type: integer
                    example: 1
        "400":
          $ref: '#/components/responses/BadRequest'
  /articles/{articleId}:
    get:
      summary: 投稿詳細
      description: 投稿詳細画面を表示
      responses:
        "200":
          description: 表示成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        "400":
          $ref: '#/components/responses/BadRequest'
    put:
      summary: 投稿編集
      description: 投稿内容を編集
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                content:
                  type: string
                  example: content
      responses:
        "204":
          description: 更新成功
        "400":
          $ref: '#/components/responses/BadRequest'
    delete:
      summary: 投稿削除
      description: 投稿内容を削除
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      responses:
        "204":
          description: 削除成功
        "400":
          $ref: '#/components/responses/BadRequest'
  /comments:
    post:
      summary: コメント投稿
      description: 新規コメントを投稿
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: comment
                userId:
                  type: integer
                  example: 1
                articleId:
                  type: integer
                  example: 1
      responses:
        "201":
          description: 登録成功
        "400":
          $ref: '#/components/responses/BadRequest'
  /comments/{commentId}:
    put:
      summary: コメント編集
      description: コメント内容を編集
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: comment
      responses:
        "204":
          description: 更新成功
        "400":
          $ref: '#/components/responses/BadRequest'
    delete:
      summary: コメント削除
      description: コメント情報を削除
      parameters:
        - $ref: '#/components/parameters/X-AUTH-TOKEN'
      responses:
        "204":
          description: 削除成功
        "400":
          $ref: '#/components/responses/BadRequest'

components:
  headers:
    X-AUTH-TOKEN:
      description: JWTトークン
      schema:
        type: string
  parameters:
    X-AUTH-TOKEN:
      in: header
      name: X-AUTH-TOKEN
      required: true
      description: JWTトークン
      schema:
        type: string
  responses:
    BadRequest:
      description: エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: エラーが発生しました
    User:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        name:
          type: string
          example: "user"
        email:
          type: string
          nullable: true
          example: null
        password:
          type: string
          nullable: true
          example: null
        introduction:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          nullable: true
          example: null
        updated_at:
          type: string
          format: date-time
          nullable: true
          example: null
    Article:
      type: object
      properties:
        articleId:
          type: integer
          example: 1
        title:
          type: string
          example: "title"
        content:
          type: string
          example: "content"
        user:
          $ref: '#/components/schemas/User'
        commentList:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        created_at:
          type: string
          example: "1900-01-01"
        updated_at:
          type: string
          example: "1900-01-01"

    Comment:
      type: object
      properties:
        commentId:
          type: integer
          example: 1
        content:
          type: string
          example: comment
        created_at:
          type: string
          example: "1900-01-01"
        updated_at:
          type: string
          example: "1900-01-01"
        user:
          $ref: '#/components/schemas/User'
